24H Junior Frontend case study
Context
Your team is building a global monitoring system for natural disasters which ingests real-time
earthquake data, stores it efficiently, and makes it available for visualization and downstream
analytics.
Your mission
Create a simple, interactive web interface that displays recent earthquakes on a map and in a list
format. The dashboard ought to be working, and we don’t care about the sophisticated look of it.
Requirements
•

Use mock up or real earthquake data from 1 public API (e.g., USGS API).

•

Display a list of earthquakes with:
o

Location

o

Magnitude

o

Time

•

Integrate a map (e.g., Leaflet or Mapbox) showing earthquake locations.

•

Clicking a list item should highlight the corresponding point on the map.

•

Use React or Angular.

•

Ensure responsive design and basic styling.

Deliverables
GitHub repo with:
•

Source code

•

Setup instructions

•

Screenshots or screen recording

•

Brief notes on design decisions

•

Short document with your assumptions and any limitations

Bonus (Optional)
•

Add prompt-based input (e.g., “Show earthquakes above magnitude 6 in Japan”)

•

Implement RBAC (e.g., admin vs. viewer)

•

Add accessibility features (keyboard nav)

•

Optimize rendering for large datasets

Evaluation Criteria
www.beyondgravity.com

Page 2 / 2

•

Code quality and structure

•

Completeness and correctness of features

•

UX and UI clarity

•

Documentation and ease of setup

We understand this case study requires a meaningful time investment, especially during a busy
week. While we don’t expect perfection, the goal is to get a deeper sense of how you approach
problems, structure your work, and make technical decisions under realistic constraints. Do your
best and prioritize on the elements you think are most important in the given time – we then discuss
them together.
Happy coding,
Your Beyond Gravity Downstream team!

www.beyondgravity.com

